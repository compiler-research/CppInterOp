name: 'Setup Compiler'
description: 'This PR sets up the compiler for the job'

runs:
  using: composite
  steps:

    - name: Setup Compiler on MacOS
      if: runner.os == 'macOS'
      shell: bash
      run: |
        vers="${compiler#*-}"
        if [[ "${{ matrix.compiler }}" == *"gcc"* ]]; then
          brew install "gcc@$vers"
          echo "CC=gcc-${vers}" >> $GITHUB_ENV
          echo "CXX=g++-${vers}" >> $GITHUB_ENV
        else
          brew install llvm@15
          if [[ "$(uname -m)" == "x86_64" ]]; then
            echo "CC=/usr/local/opt/llvm@15/bin/clang" >> $GITHUB_ENV
            echo "CXX=/usr/local/opt/llvm@15/bin/clang++" >> $GITHUB_ENV
          else
            echo "CC=/opt/homebrew/opt/llvm@15/bin/clang" >> $GITHUB_ENV
            echo "CXX=/opt/homebrew/opt/llvm@15/bin/clang++" >> $GITHUB_ENV
          fi
        fi
        echo "SDKROOT=$(xcrun --sdk macosx --show-sdk-path)" >> $GITHUB_ENV
      env:
        compiler: ${{ matrix.compiler }}

    - name: Setup Compiler on Linux
      if: runner.os == 'Linux'
      shell: bash
      run: |
        # https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html
        vers="${compiler#*-}"
        os_codename="`cat /etc/os-release | grep UBUNTU_CODENAME | cut -d = -f 2`"
        if [[ "${{ matrix.compiler }}" == *"gcc"* ]]; then
          sudo apt install -y gcc-${vers} g++-${vers} lld
          echo "CC=gcc-${vers}" >> $GITHUB_ENV
          echo "CXX=g++-${vers}" >> $GITHUB_ENV
        else
          if ! sudo apt install -y clang-${vers}; then
            curl https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
            echo "deb https://apt.llvm.org/${os_codename}/ llvm-toolchain-${os_codename}-${vers} main" | sudo tee -a /etc/apt/sources.list
            sudo apt-get update
            sudo apt-get install -y clang-${vers}
          fi
          echo "CC=clang-${vers}" >> $GITHUB_ENV
          echo "CXX=clang++-${vers}" >> $GITHUB_ENV
        fi
      env:
        compiler: ${{ matrix.compiler }}

    - name: Save Compiler on Windows Systems
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        if ( "${{ matrix.compiler }}" -imatch "clang" )
        {
          $ver="${{ matrix.compiler }}".split("-")[1]
          choco install llvm --version=$ver --no-progress -my
          clang --version
          #
          $env:CC="clang"
          $env:CXX="clang++"
          echo "CC=clang" >> $env:GITHUB_ENV
          echo "CXX=clang++" >> $env:GITHUB_ENV
        }
        elseif ( "${{ matrix.compiler }}" -imatch "msvc" )
        {
          # MSVC is builtin in container image
        }
        else
        {
          echo "Unsupported compiler - fix YAML file"
        }
