name: Windows
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  release:
    types: [published]
  schedule:
    - cron: '30 20 * * *' # Warning: Timezone dep - 20:00 is 1:00

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: win2025-msvc-clang-repl-20
            os: windows-2025
            compiler: msvc
            clang-runtime: '20'
            cling: Off
            llvm_enable_projects: "clang"
            llvm_targets_to_build: "host;NVPTX"
          - name: win2025-msvc-clang18-cling
            os: windows-2025
            compiler: msvc
            clang-runtime: '18'
            cling: On
            cling-version: '1.2'
            llvm_enable_projects: "clang"
            llvm_targets_to_build: "host;NVPTX"

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Save PR Info
      uses: ./.github/actions/Miscellaneous/Save_PR_Info

    - name: Restore cached LLVM-${{ matrix.clang-runtime }} and ${{ matrix.cling == 'On' && 'Cling' || 'Clang-REPL' }} build
      uses: actions/cache/restore@v4
      id: cache
      with:
        path: |
          llvm-project
          ${{ matrix.cling=='On' && 'cling' || '' }}
        key: ${{ env.CLING_HASH }}-${{ runner.os }}-${{ matrix.os }}-${{ matrix.compiler }}-clang-${{ matrix.clang-runtime }}.x-patch-${{ hashFiles(format('patches/llvm/clang{0}-*.patch', matrix.clang-runtime)) || 'none' }}

    - name: Setup default Build Type on Windows
      run: |
        echo "BUILD_TYPE=Release" >> $env:GITHUB_ENV
        echo "CODE_COVERAGE=0" >>  $env:GITHUB_ENV
        $env:ncpus=$([Environment]::ProcessorCount)
        echo "ncpus=$env:ncpus" >> $env:GITHUB_ENV

    - name: Setup compiler
      uses: ./.github/actions/Miscellaneous/Setup_Compiler

    - name: Install deps on Windows
      run: |
        choco install findutils
        $env:PATH="C:\Program Files (x86)\GnuWin32\bin;$env:PATH"

    - name: Build LLVM-${{ matrix.clang-runtime }} and ${{ matrix.cling == 'On' && 'Cling' || 'Clang-REPL' }}
      uses: ./.github/actions/Build_LLVM
      with:
        cache-hit: ${{ steps.cache.outputs.cache-hit }}

    - name: Cache LLVM-${{ matrix.clang-runtime }} and ${{ matrix.cling == 'On' && 'Cling' || 'Clang-REPL' }} build
      uses: actions/cache/save@v4
      if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      with:
        path: |
          llvm-project
          ${{ matrix.cling=='On' && 'cling' || '' }}
        key: ${{ steps.cache.outputs.cache-primary-key }}   

    - name: Build and test CppInterOp
      uses: ./.github/actions/Build_and_Test_CppInterOp

    - name: Setup tmate session
      if: ${{ failure() && runner.debug }}
      uses: mxschmitt/action-tmate@v3
      # When debugging increase to a suitable value!
      timeout-minutes: 30
